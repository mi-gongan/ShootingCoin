/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TestShootingCoin,
  TestShootingCoinInterface,
} from "../../contracts/TestShootingCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f53686f6f74696e67436f696e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f535443000000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620004b9565b508060049081620000a19190620004b9565b505050620000c2336b033b2e3c9fd0803ce8000000620000c860201b60201c565b620006bb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200013a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001319062000601565b60405180910390fd5b6200014e600083836200023560201b60201c565b806002600082825462000162919062000652565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021591906200069e565b60405180910390a362000231600083836200023a60201b60201c565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002c157607f821691505b602082108103620002d757620002d662000279565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000302565b6200034d868362000302565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200039a620003946200038e8462000365565b6200036f565b62000365565b9050919050565b6000819050919050565b620003b68362000379565b620003ce620003c582620003a1565b8484546200030f565b825550505050565b600090565b620003e5620003d6565b620003f2818484620003ab565b505050565b5b818110156200041a576200040e600082620003db565b600181019050620003f8565b5050565b601f82111562000469576200043381620002dd565b6200043e84620002f2565b810160208510156200044e578190505b620004666200045d85620002f2565b830182620003f7565b50505b505050565b600082821c905092915050565b60006200048e600019846008026200046e565b1980831691505092915050565b6000620004a983836200047b565b9150826002028217905092915050565b620004c4826200023f565b67ffffffffffffffff811115620004e057620004df6200024a565b5b620004ec8254620002a8565b620004f98282856200041e565b600060209050601f8311600181146200053157600084156200051c578287015190505b6200052885826200049b565b86555062000598565b601f1984166200054186620002dd565b60005b828110156200056b5784890151825560018201915060208501945060208101905062000544565b868310156200058b578489015162000587601f8916826200047b565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005e9601f83620005a0565b9150620005f682620005b1565b602082019050919050565b600060208201905081810360008301526200061c81620005da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200065f8262000365565b91506200066c8362000365565b925082820190508082111562000687576200068662000623565b5b92915050565b620006988162000365565b82525050565b6000602082019050620006b560008301846200068d565b92915050565b6117cc80620006cb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063449a52f81161008c578063a0712d6811610066578063a0712d681461025f578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b8063449a52f8146101f557806370a082311461021157806395d89b4114610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806342966c68146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b6040516101049190610eec565b60405180910390f35b61012760048036038101906101229190610fa7565b61039d565b6040516101349190611002565b60405180910390f35b6101456103c0565b604051610152919061102c565b60405180910390f35b61017560048036038101906101709190611047565b6103ca565b6040516101829190611002565b60405180910390f35b6101936103f9565b6040516101a091906110b6565b60405180910390f35b6101c360048036038101906101be9190610fa7565b610402565b6040516101d09190611002565b60405180910390f35b6101f360048036038101906101ee91906110d1565b610439565b005b61020f600480360381019061020a9190610fa7565b610446565b005b61022b600480360381019061022691906110fe565b610454565b604051610238919061102c565b60405180910390f35b61024961049c565b6040516102569190610eec565b60405180910390f35b610279600480360381019061027491906110d1565b61052e565b005b61029560048036038101906102909190610fa7565b61053b565b6040516102a29190611002565b60405180910390f35b6102c560048036038101906102c09190610fa7565b6105b2565b6040516102d29190611002565b60405180910390f35b6102f560048036038101906102f0919061112b565b6105d5565b604051610302919061102c565b60405180910390f35b60606003805461031a9061119a565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061119a565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a861065c565b90506103b5818585610664565b600191505092915050565b6000600254905090565b6000806103d561065c565b90506103e285828561082d565b6103ed8585856108b9565b60019150509392505050565b60006012905090565b60008061040d61065c565b905061042e81858561041f85896105d5565b61042991906111fa565b610664565b600191505092915050565b6104433382610b2f565b50565b6104508282610cfc565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104ab9061119a565b80601f01602080910402602001604051908101604052809291908181526020018280546104d79061119a565b80156105245780601f106104f957610100808354040283529160200191610524565b820191906000526020600020905b81548152906001019060200180831161050757829003601f168201915b5050505050905090565b6105383382610cfc565b50565b60008061054661065c565b9050600061055482866105d5565b905083811015610599576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610590906112a0565b60405180910390fd5b6105a68286868403610664565b60019250505092915050565b6000806105bd61065c565b90506105ca8185856108b9565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90611332565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610742576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610739906113c4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610820919061102c565b60405180910390a3505050565b600061083984846105d5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108b357818110156108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611430565b60405180910390fd5b6108b28484848403610664565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f906114c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90611554565b60405180910390fd5b6109a2838383610e52565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f906115e6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b16919061102c565b60405180910390a3610b29848484610e57565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590611678565b60405180910390fd5b610baa82600083610e52565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c279061170a565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ce3919061102c565b60405180910390a3610cf783600084610e57565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6290611776565b60405180910390fd5b610d7760008383610e52565b8060026000828254610d8991906111fa565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e3a919061102c565b60405180910390a3610e4e60008383610e57565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e96578082015181840152602081019050610e7b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ebe82610e5c565b610ec88185610e67565b9350610ed8818560208601610e78565b610ee181610ea2565b840191505092915050565b60006020820190508181036000830152610f068184610eb3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3e82610f13565b9050919050565b610f4e81610f33565b8114610f5957600080fd5b50565b600081359050610f6b81610f45565b92915050565b6000819050919050565b610f8481610f71565b8114610f8f57600080fd5b50565b600081359050610fa181610f7b565b92915050565b60008060408385031215610fbe57610fbd610f0e565b5b6000610fcc85828601610f5c565b9250506020610fdd85828601610f92565b9150509250929050565b60008115159050919050565b610ffc81610fe7565b82525050565b60006020820190506110176000830184610ff3565b92915050565b61102681610f71565b82525050565b6000602082019050611041600083018461101d565b92915050565b6000806000606084860312156110605761105f610f0e565b5b600061106e86828701610f5c565b935050602061107f86828701610f5c565b925050604061109086828701610f92565b9150509250925092565b600060ff82169050919050565b6110b08161109a565b82525050565b60006020820190506110cb60008301846110a7565b92915050565b6000602082840312156110e7576110e6610f0e565b5b60006110f584828501610f92565b91505092915050565b60006020828403121561111457611113610f0e565b5b600061112284828501610f5c565b91505092915050565b6000806040838503121561114257611141610f0e565b5b600061115085828601610f5c565b925050602061116185828601610f5c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111b257607f821691505b6020821081036111c5576111c461116b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120582610f71565b915061121083610f71565b9250828201905080821115611228576112276111cb565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061128a602583610e67565b91506112958261122e565b604082019050919050565b600060208201905081810360008301526112b98161127d565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061131c602483610e67565b9150611327826112c0565b604082019050919050565b6000602082019050818103600083015261134b8161130f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006113ae602283610e67565b91506113b982611352565b604082019050919050565b600060208201905081810360008301526113dd816113a1565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061141a601d83610e67565b9150611425826113e4565b602082019050919050565b600060208201905081810360008301526114498161140d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006114ac602583610e67565b91506114b782611450565b604082019050919050565b600060208201905081810360008301526114db8161149f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061153e602383610e67565b9150611549826114e2565b604082019050919050565b6000602082019050818103600083015261156d81611531565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006115d0602683610e67565b91506115db82611574565b604082019050919050565b600060208201905081810360008301526115ff816115c3565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611662602183610e67565b915061166d82611606565b604082019050919050565b6000602082019050818103600083015261169181611655565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006116f4602283610e67565b91506116ff82611698565b604082019050919050565b60006020820190508181036000830152611723816116e7565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611760601f83610e67565b915061176b8261172a565b602082019050919050565b6000602082019050818103600083015261178f81611753565b905091905056fea26469706673582212209a8b011ec2229cdc8a066110550c551790d36a070ef9ef44f5418d533536b1eb64736f6c63430008110033";

type TestShootingCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestShootingCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestShootingCoin__factory extends ContractFactory {
  constructor(...args: TestShootingCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestShootingCoin> {
    return super.deploy(overrides || {}) as Promise<TestShootingCoin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestShootingCoin {
    return super.attach(address) as TestShootingCoin;
  }
  override connect(signer: Signer): TestShootingCoin__factory {
    return super.connect(signer) as TestShootingCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestShootingCoinInterface {
    return new utils.Interface(_abi) as TestShootingCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestShootingCoin {
    return new Contract(address, _abi, signerOrProvider) as TestShootingCoin;
  }
}
