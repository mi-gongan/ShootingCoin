/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ShootingCoinManager,
  ShootingCoinManagerInterface,
} from "../../contracts/ShootingCoinManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "nftSkinId",
            type: "uint256[5]",
          },
        ],
        indexed: false,
        internalType: "struct GameCore.BetInfo",
        name: "betInfo",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "Entered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user2",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user1",
            type: "address",
          },
          {
            internalType: "address",
            name: "user2",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "coinAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "betAmount",
                type: "uint256",
              },
              {
                internalType: "uint256[5]",
                name: "nftSkinId",
                type: "uint256[5]",
              },
            ],
            internalType: "struct GameCore.BetInfo",
            name: "user1BetInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "coinAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "betAmount",
                type: "uint256",
              },
              {
                internalType: "uint256[5]",
                name: "nftSkinId",
                type: "uint256[5]",
              },
            ],
            internalType: "struct GameCore.BetInfo",
            name: "user2BetInfo",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct GameCore.GameInfo",
        name: "gameInfo",
        type: "tuple",
      },
    ],
    name: "GameInited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user2",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user1",
            type: "address",
          },
          {
            internalType: "address",
            name: "user1coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "user1GetAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user2",
            type: "address",
          },
          {
            internalType: "address",
            name: "user2coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "user2GetAmount",
            type: "uint256",
          },
          {
            internalType: "uint240",
            name: "timeStamp",
            type: "uint240",
          },
        ],
        indexed: false,
        internalType: "struct GameCore.GameHistory",
        name: "gameHistory",
        type: "tuple",
      },
    ],
    name: "GameSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "nftSkinId",
            type: "uint256[5]",
          },
        ],
        indexed: false,
        internalType: "struct GameCore.BetInfo",
        name: "betInfo",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "Quited",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "betInfo",
    outputs: [
      {
        internalType: "address",
        name: "coinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "betAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "checkOnGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "coinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "despositCoin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "nftSkinId",
            type: "uint256[5]",
          },
        ],
        internalType: "struct GameCore.BetInfo",
        name: "_betInfo",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "enterGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecieveAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user1coinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "user1GetAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2coinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "user2GetAmount",
        type: "uint256",
      },
      {
        internalType: "uint240",
        name: "timeStamp",
        type: "uint240",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameInfo",
    outputs: [
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "nftSkinId",
            type: "uint256[5]",
          },
        ],
        internalType: "struct GameCore.BetInfo",
        name: "user1BetInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "nftSkinId",
            type: "uint256[5]",
          },
        ],
        internalType: "struct GameCore.BetInfo",
        name: "user2BetInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAccount",
        type: "address",
      },
    ],
    name: "getBetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "nftSkinId",
            type: "uint256[5]",
          },
        ],
        internalType: "struct GameCore.BetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user1",
            type: "address",
          },
          {
            internalType: "address",
            name: "user2",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "coinAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "betAmount",
                type: "uint256",
              },
              {
                internalType: "uint256[5]",
                name: "nftSkinId",
                type: "uint256[5]",
              },
            ],
            internalType: "struct GameCore.BetInfo",
            name: "user1BetInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "coinAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "betAmount",
                type: "uint256",
              },
              {
                internalType: "uint256[5]",
                name: "nftSkinId",
                type: "uint256[5]",
              },
            ],
            internalType: "struct GameCore.BetInfo",
            name: "user2BetInfo",
            type: "tuple",
          },
        ],
        internalType: "struct GameCore.GameInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAccount",
        type: "address",
      },
    ],
    name: "getHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user1",
            type: "address",
          },
          {
            internalType: "address",
            name: "user1coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "user1GetAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user2",
            type: "address",
          },
          {
            internalType: "address",
            name: "user2coinAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "user2GetAmount",
            type: "uint256",
          },
          {
            internalType: "uint240",
            name: "timeStamp",
            type: "uint240",
          },
        ],
        internalType: "struct GameCore.GameHistory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShootingNft",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShootingRole",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "roleContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gameFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeRecieveAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOnGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "quitGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "user1GetAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "user2GetAmount",
        type: "uint256",
      },
    ],
    name: "settleGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "shootingNft",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shootingRole",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "updateShootingNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "roleContract",
        type: "address",
      },
    ],
    name: "updateShootingRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "coinAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isWhite",
        type: "bool",
      },
    ],
    name: "updateWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usedSalt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type ShootingCoinManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShootingCoinManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShootingCoinManager__factory extends ContractFactory {
  constructor(...args: ShootingCoinManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShootingCoinManager> {
    return super.deploy(overrides || {}) as Promise<ShootingCoinManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShootingCoinManager {
    return super.attach(address) as ShootingCoinManager;
  }
  override connect(signer: Signer): ShootingCoinManager__factory {
    return super.connect(signer) as ShootingCoinManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShootingCoinManagerInterface {
    return new utils.Interface(_abi) as ShootingCoinManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShootingCoinManager {
    return new Contract(address, _abi, signerOrProvider) as ShootingCoinManager;
  }
}
