/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CurrencyController,
  CurrencyControllerInterface,
} from "../../../contracts/libs/CurrencyController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "coinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "despositCoin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610445806100206000396000f3fe6080604052600436106100295760003560e01c8063229f1db61461002e5780639b19251a1461004a575b600080fd5b61004860048036038101906100439190610241565b610087565b005b34801561005657600080fd5b50610071600480360381019061006c9190610281565b610188565b60405161007e91906102c9565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610102578034146100fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f490610341565b60405180910390fd5b610184565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161013f9392919061037f565b6020604051808303816000875af115801561015e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018291906103e2565b505b5050565b60016020528060005260406000206000915054906101000a900460ff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d8826101ad565b9050919050565b6101e8816101cd565b81146101f357600080fd5b50565b600081359050610205816101df565b92915050565b6000819050919050565b61021e8161020b565b811461022957600080fd5b50565b60008135905061023b81610215565b92915050565b60008060408385031215610258576102576101a8565b5b6000610266858286016101f6565b92505060206102778582860161022c565b9150509250929050565b600060208284031215610297576102966101a8565b5b60006102a5848285016101f6565b91505092915050565b60008115159050919050565b6102c3816102ae565b82525050565b60006020820190506102de60008301846102ba565b92915050565b600082825260208201905092915050565b7f77726f6e6720616d6f756e740000000000000000000000000000000000000000600082015250565b600061032b600c836102e4565b9150610336826102f5565b602082019050919050565b6000602082019050818103600083015261035a8161031e565b9050919050565b61036a816101cd565b82525050565b6103798161020b565b82525050565b60006060820190506103946000830186610361565b6103a16020830185610361565b6103ae6040830184610370565b949350505050565b6103bf816102ae565b81146103ca57600080fd5b50565b6000815190506103dc816103b6565b92915050565b6000602082840312156103f8576103f76101a8565b5b6000610406848285016103cd565b9150509291505056fea2646970667358221220ed3e8e5083f314ef9a3a27fa2cef45fc9bbc04e6670bbfc1abc6e0b57d46b3ac64736f6c63430008110033";

type CurrencyControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurrencyControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurrencyController__factory extends ContractFactory {
  constructor(...args: CurrencyControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurrencyController> {
    return super.deploy(overrides || {}) as Promise<CurrencyController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurrencyController {
    return super.attach(address) as CurrencyController;
  }
  override connect(signer: Signer): CurrencyController__factory {
    return super.connect(signer) as CurrencyController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyControllerInterface {
    return new utils.Interface(_abi) as CurrencyControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurrencyController {
    return new Contract(address, _abi, signerOrProvider) as CurrencyController;
  }
}
